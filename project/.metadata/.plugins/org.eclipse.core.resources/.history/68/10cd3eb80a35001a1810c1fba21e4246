#include "stm32l476xx.h"


//These functions inside the asm file
extern void GPIO_init();
extern void max7219_init();
extern void max7219_send(unsigned char address, unsigned char data);
extern void max7219_init2();
extern void max7219_send2(unsigned char address, unsigned char data);

int SCORE_A = 0;
int SCORE_B = 0;
int TIME_LEFT = 10000;

void reset_SCORE() {
	for (int i = 1; i <= 8; i++) {
		max7219_send(i, 15);
		max7219_send2(i, 15);
	}
}

void display_SCORE_A() {
	int tmp_score = SCORE_A;
	if (tmp_score == 0) {
		max7219_send(5, 0);
		return;
	}
	for (int i = 5; i <= 8; i++) {
		int digit = tmp_score % 10;
		if (tmp_score == 0) digit = 15;
		max7219_send(i, digit);
		tmp_score /= 10;
	}
}

void display_SCORE_B() {
	int tmp_score = SCORE_B;
	if (tmp_score == 0) {
		max7219_send2(1, 0);
		return;
	}
	for (int i = 1; i <= 4; i++) {
		int digit = tmp_score % 10;
		if (tmp_score == 0) digit = 15;
		max7219_send2(i, digit);
		tmp_score /= 10;
	}
}

void display_SEC(int sec) {
	for (int i = 7; i <= 8; i++) {
		int digit = sec % 10;
		max7219_send2(i, digit);
		sec /= 10;
	}
}

void display_MIN(int min) {
	for (int i = 1; i <= 2; i++) {
		int digit = min % 10;
		max7219_send(i, digit);
		min /= 10;
	}
}

void display_TIME() {
	int tmp_time = TIME_LEFT;
	if (tmp_time < 0) tmp_time = 0;

	int sec = tmp_time / 100;
	display_SEC(sec%60);

	int min = sec / 60;
	display_MIN(min);
}

int display() {
	reset_SCORE();
	while(1) {
		display_TIME()

		display_SCORE_A();
		SCORE_A += 5;
		int dly = 500000;
		while(dly--);

		display_SCORE_B();
		SCORE_B += 1;
		dly = 500000;
		while(dly--);

	}

//	for (unsigned int i = 1; i < num_digs; i++) {
//		unsigned int digit = data % 10;
//		max7219_send(i, digit);
//		data /= 10;
//	}
//	if (data2>99999999)
//			return -1;
//		for (unsigned int i = 1; i < num_digs; i++) {
//			unsigned int digit = data2 % 10;
//			max7219_send2(i, digit);
//			data2 /= 10;
//		}
	return 0;
}

void main() {
	//unsigned int student_id = 616026;
	//unsigned int student_id2 = 516097;
	GPIO_init();
	max7219_init();
	max7219_init2();
	display();
}
