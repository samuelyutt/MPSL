#include "stm32l476xx.h"
#include "cmsis_gcc.h"
#include "core_cm4.h"
#include "core_cmFunc.h"
#include "core_cmInstr.h"
#include "core_cmSimd.h"
#include "system_stm32l4xx.h"
#define SET_REG(REG, SELECT, VAL) { ((REG)=((REG)&(~(SELECT))) | (VAL)); };


//These functions inside the asm file
extern void GPIO_init();
extern void Delay1sWith4MHz();
extern void DelayDebounce();
extern void LEDON();
extern void LEDOFF();
extern void Detect();

int state;
int pressed;

unsigned int pll_config[5] =
{
    0b111000000000000100001110001,
    0b011000000000000110000110001,
    0b011000000000001010000110001,
    0b011000000000010000000110001,
    0b011000000000101000000110001
};

void SystemClock_Config(){

	state %= 5;
	RCC->CR |= RCC_CR_HSION;
	while((RCC->CR & RCC_CR_HSIRDY) == 0);

	RCC->CFGR = 0x00000000;
	RCC->CR  &= 0xFEFFFFFF;
	while (RCC->CR & 0x02000000);


	//RCC->PLLCFGR &= 0x00000001;
	//RCC->PLLCFGR |= pll_config[state];

	RCC->CR |= RCC_CR_PLLON;
	while((RCC->CR & RCC_CR_PLLRDY) == 0);

	RCC->CFGR |= RCC_CFGR_SW_PLL;
	while ((RCC->CFGR & RCC_CFGR_SWS_PLL) != RCC_CFGR_SWS_PLL);
	return;
}

void Detect() {
	int flag = ~GPIOC->IDR&1<<13;
	if (flag) {
		pressed = 1;
	}
	return;
}


void main() {
	SystemClock_Config();
	GPIO_init();
	pressed = 0;
	state = 0;
	while (1) {
		LEDON();
		Delay1sWith4MHz();
		LEDOFF();
		Delay1sWith4MHz();
		if (pressed) {
			state++;
			SystemClock_Config();
			pressed = 0;
			DelayDebounce();
			if (state == 4) {
				for (int i=0; i<10; i++)
					DelayDebounce();
			}
		}
	}
